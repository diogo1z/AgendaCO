@model AgendaClinica.Models.OdontologistaVM

@{
    Page.Title = "AgendaFácil - Odontologista";
}

<div class="col-lg-12">
    <h1 class="page-header">Editar Odontologista</h1>
</div>
<br />

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.Id)

    <div class="row ">
        <div class="col-lg-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            @Html.LabelFor(x => x.Nome)
            @Html.TextBoxFor(x => x.Nome, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Nome, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Cro)
            @Html.TextBoxFor(x => x.Cro, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(x => x.Cro, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.CroEstado)
            @Html.DropDownListFor(x => x.CroEstado, EnumHelper.GetSelectList(typeof(AgendaEnums.Uf)), "Selecione", new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(x => x.CroEstado, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Cpf)
            @Html.TextBoxFor(x => x.Cpf, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(x => x.Cpf, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.DataNascimento)
            @Html.TextBoxFor(x => x.DataNascimento, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            @Html.LabelFor(x => x.Email)
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-8">
            @Html.LabelFor(x => x.Endereco)
            @Html.TextBoxFor(x => x.Endereco, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Endereco, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(x => x.Numero)
            @Html.TextBoxFor(x => x.Numero, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Numero, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Complemento)
            @Html.TextBoxFor(x => x.Complemento, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Complemento, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Cep)
            @Html.TextBoxFor(x => x.Cep, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Cep, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <div class="form-group col-lg-12">
        <button type="submit" class="btn btn-success">Salvar</button>
    </div>
    <br />
    <br />
}

@section Scripts{

    @Scripts.Render("~/bundles/jqueryDatatables")

    @Scripts.Render("~/bundles/datablesBootstrap")

    @Scripts.Render("~/bundles/jqueryDatatablesResponsive")

    @Scripts.Render("~/bundles/responsiveBootstrap")

    <script>
        $(document).ready(function () {            
            $("#Cpf").mask('000.000.000-00');

            $("#Cep").mask('00000-000');

            $("#DataNascimento").mask('00/00/0000');

            $("#DataNascimento").datepicker({
                format: 'dd/mm/yyyy',
                dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                dateFormat: 'dd/mm/yy',
                nextText: 'Próximo',
                prevText: 'Anterior'
            });

        });

    </script>
}


