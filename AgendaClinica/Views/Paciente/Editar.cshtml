@model AgendaClinica.Models.PacienteVM

@{
    Page.Title = "AgendaFácil - Paciente";
}

<div class="col-lg-12">
    <h1 class="page-header">Editar Paciente</h1>
</div>
<br />
<div class="modal fade" id="modalDependente" tabindex="-1"
     role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" id="containerDependente"></div>
    </div>
</div>
@using (Html.BeginForm("Editar", "Paciente", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.Dependente.Nome)
    @Html.HiddenFor(x => x.Dependente.DataNascimento)
    
    <div class="row ">
        <div class="col-lg-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            @Html.LabelFor(x => x.Nome)
            @Html.TextBoxFor(x => x.Nome, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Cpf)
            @Html.TextBoxFor(x => x.Cpf, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Cpf, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.DataNascimento)
            @Html.TextBoxFor(x => x.DataNascimento, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-12">
            @Html.LabelFor(x => x.Email)
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Telefone)
            @Html.TextBoxFor(x => x.Telefone, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Telefone, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Celular)
            @Html.TextBoxFor(x => x.Celular, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Celular, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group col-lg-12">
        <button type="submit" class="btn btn-success"><i class="glyphicon glyphicon-floppy-disk"></i> Salvar</button>
        <button type="button" id="btnVoltar" class="btn btn-default" onclick="Voltar();"><i class="glyphicon glyphicon-chevron-left"></i> Voltar</button>
    </div>
}
<hr />
<br />
<hr />
<button class="btn btn-primary" tooltip="Novo Dependente" onclick="AdicionarDependente();"><i class="glyphicon glyphicon-plus"></i> Novo Dependente</button>
<br />
<hr />
<br />
@if (Model.Dependentes != null)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <table width="100%" class="table table-striped table-bordered table-hover" id="dataTableDependente">
                        <thead>
                            <tr>
                                <th>Nome</th>
                                <th>Data Nascimento</th>
                                <th style="text-align: center;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var dependente in Model.Dependentes)
                            {
                                <tr class="odd gradeX">
                                    <td>@dependente.Nome</td>
                                    <td>@dependente.DataNascimento.Value.ToShortDateString()</td>
                                    <td style="text-align: center;">
                                        <button class="btn btn-warning details" tooltip="Editar" onclick="EditarDependente('@dependente.Id');"><i class="glyphicon glyphicon-edit"></i></button>
                                        <button class="btn btn-danger details" tooltip="Excluir" onclick="excluirDependente('@dependente.Id');"><i class="glyphicon glyphicon-remove"></i></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <!-- /.table-responsive -->
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
        <!-- /.col-lg-12 -->
    </div>

    <br />
}

@section Scripts{

    @Scripts.Render("~/bundles/jqueryDatatables")

    @Scripts.Render("~/bundles/datablesBootstrap")

    @Scripts.Render("~/bundles/jqueryDatatablesResponsive")

    @Scripts.Render("~/bundles/responsiveBootstrap")


    <script type="text/javascript">

        function Voltar() {
            window.location.href = "@Url.Action("Index", "Paciente")";
        };

        function AdicionarDependente() {
            var url = "@Url.Action("AdicionarDependente", "Paciente", new { idPaciente = Model.Id })";
            $.get(url, function (data) {
                $('#containerDependente').html(data);
                $('#modalDependente').modal('show');
            });

        };

        function EditarDependente(id) {

            var url = "@Url.Action("EditarDependente", "Paciente", new { idPaciente = Model.Id })&id=" + id;
            $.get(url, function (data) {
                $('#containerDependente').html(data);
                $('#modalDependente').modal('show');
            });

            };

        function excluirDependente(id) {
            $('#modalConfirm').modal({
                backdrop: 'static',
                keyboard: false
            }).one('click', '#confirmModalConfirm', function (e) {
                  $.ajax({
                      url: "@Url.Action("ExcluirDependente", "Paciente")?id=" + id,
                      type: "POST",
                      cache: false,
                      success: function (data) {
                          window.location.href = "@Url.Action("Editar", "Paciente")?idPaciente=@Model.Id";
                      }
                  });
              });
            };

            $(document).ready(function () {


                $("#Cpf").mask('000.000.000-00');

                $("#Cep").mask('00000-000');

                $("#DataNascimento").mask('00/00/0000');
                $("#Dependente_DataNascimento").mask('00/00/0000');

                $("#Celular").mask('(00) 00000-0000');
                $("#Telefone").mask('(00) 0000-0000');

                $("#DataNascimento").datepicker({
                    format: 'dd/mm/yyyy',
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    dateFormat: 'dd/mm/yy',
                    nextText: 'Próximo',
                    prevText: 'Anterior'
                });



            });



    </script>
}
